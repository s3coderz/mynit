The following text describes how to use the com.talentuno.mynitutils.QueryServer API.

1) The QueryServer APIs do not return ANY values as they are mainly asynchronous tasks executed in the background.
2) Any class making calls to the QueryServer APIs must implement the ResultHandler interface.
3) QueryServer APIs will execute the onSuccess or onFailure methods of the calling class based on whether the API executed successfully or not.
4) Classes calling QueryServer APIs can use the data they receive from the parameters of the onSuccess or onFailure methods
5) onSuccess:
		Object object : result of the QueryServer API
		int requestId : the requestId that was passed as parameter when the QueryServer API was called. Use this to identify the request
		int responseId: the responseId that was passed as parameter when the QueryServer API was called. Use this to identify the response
6) onFailure:
		String errMsg : String representing the error of the QueryServer API
		int requestId : the requestId that was passed as parameter when the QueryServer API was called. Use this to identify the request
		int responseId: the responseId that was passed as parameter when the QueryServer API was called. Use this to identify the response
7) QueryServer APIs must be called in this fashion:
		QueryServer requestTask = new QueryServer(this, Action.REQUEST_OTP,	REQUEST_ID, 0);
		requestTask.execute(countryCode, mobNo, Utils.getImeiNumber(this));
8) The result can be used in this fashion:
	@Override
	public void onFailure(String errMsg, int requestId, int responseId) {
		Log.i("", "requestOTP onError : " + errMsg);
		errorText.setVisibility(View.VISIBLE);
		errorText.setText(errMsg);
		showProgress(false);
	}
9) The following actions are supported by QueryServer:
		CREATE_USER - action to create a user in the Database
		GET_USER - action to get all profile information of a user from Database
		REQUEST_OTP - action to request an OTP from server
		VERIFY_OTP - action to verify OTP entered by user matches one on server
		EDIT_USER - action to edit profile details of user on server
		CREATE_COMMENT - action to create a comment on server
		GET_COMMENT - action to get a comment from server
		UPVOTE_COMMENT - action to upvote a comment
		DOWNVOTE_COMMENT - action to downvote a comment
10) The parameters passed to the execute method of a QueryServer object must be in the following order based on the ACTION type:
		CREATE_USER - String name, String uid, String dpId, String phNumber, String email, String imei
		GET_USER - String uid
		REQUEST_OTP - String countryCode , String phNumber, String imei
		VERIFY_OTP - String countryCode , String phNumber , String OTP
		EDIT_USER - String name, String uid, String dpId, String phNumber, String email, String imei
		CREATE_COMMENT - String surveyId, String text, String name, String uid
		GET_COMMENT - String commentId
		UPVOTE_COMMENT - String uid, String commentId
		DOWNVOTE_COMMENT - String uid, String commentId
